# Generated by Django 3.2.4 on 2021-06-26 13:27

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields
import phonenumber_field.modelfields
import printer_support.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('middle_name', models.CharField(blank=True, max_length=20)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('is_pro', models.BooleanField(default=False)),
                ('is_accountant', models.BooleanField(default=False)),
                ('is_head', models.BooleanField(default=False)),
                ('is_supervisor', models.BooleanField(default=False)),
                ('is_client', models.BooleanField(default=False, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='profiles')),
                ('password', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', printer_support.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=30, unique=True)),
                ('address', models.CharField(max_length=50)),
                ('requested_by', models.CharField(blank=True, max_length=60, null=True)),
                ('approved_by', models.CharField(blank=True, max_length=60, null=True)),
                ('action_status', models.CharField(default='Approved', max_length=20)),
                ('rep', models.CharField(max_length=60)),
                ('rep_tel', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('rep_email', models.EmailField(max_length=254, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('description', models.TextField()),
                ('assigned_technicians', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[], max_length=200, null=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('link_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='printer_support.client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True)),
                ('requested_by', models.CharField(blank=True, max_length=60, null=True)),
                ('approved_by', models.CharField(blank=True, max_length=60, null=True)),
                ('action_status', models.CharField(default='Approved', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raters_email', models.TextField()),
                ('trainers', multiselectfield.db.fields.MultiSelectField(choices=[], max_length=200)),
                ('training_category', models.CharField(choices=[('Loyalty solution', 'Loyalty Solution'), ('CCTV surveillance system', 'CCTV Surveillance System'), ('Time and Attendance solution', 'Time and Attendance Solution'), ('ART', 'ART'), ('STEM', 'STEM'), ('Printer Troubleshooting', 'Printer Troubleshooting'), ('Printer Repairs', 'Printer Repairs'), ('Printer Cleaning', 'Printer Cleaning')], default='troubleshooting', max_length=30)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('description', models.TextField()),
                ('training_comment', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=15, null=True)),
                ('link_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='printer_support.client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Waybill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.CharField(max_length=50)),
                ('filename', models.CharField(max_length=10, unique=True)),
                ('type', models.CharField(max_length=20)),
                ('file', models.FileField(blank=True, null=True, upload_to='waybills')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_type', models.CharField(max_length=10)),
                ('user', models.IntegerField()),
                ('rater', models.IntegerField(blank=True, null=True)),
                ('rating', models.IntegerField(default=0)),
                ('comment', models.CharField(blank=True, max_length=100, null=True)),
                ('date', models.DateField()),
                ('topics', models.CharField(blank=True, choices=[('None', 'Choose an option!'), ('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Uncertain', 'Uncertain'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], max_length=20, null=True)),
                ('slides', models.CharField(blank=True, choices=[('None', 'Choose an option!'), ('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Uncertain', 'Uncertain'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], max_length=20, null=True)),
                ('duration', models.CharField(blank=True, choices=[('None', 'Choose an option!'), ('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Uncertain', 'Uncertain'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], max_length=20, null=True)),
                ('solution', models.CharField(blank=True, choices=[('None', 'Choose an option!'), ('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Uncertain', 'Uncertain'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], max_length=20, null=True)),
                ('style', models.CharField(blank=True, choices=[('None', 'Choose an option!'), ('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Uncertain', 'Uncertain'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], max_length=20, null=True)),
                ('q_response', models.CharField(blank=True, choices=[('None', 'Choose an option!'), ('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Uncertain', 'Uncertain'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], max_length=20, null=True)),
                ('location', models.CharField(blank=True, choices=[('None', 'Choose an option!'), ('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Uncertain', 'Uncertain'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], max_length=20, null=True)),
                ('config_install', models.CharField(blank=True, choices=[('None', 'Choose an option!'), ('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Uncertain', 'Uncertain'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], max_length=20, null=True)),
                ('training_benefit', models.CharField(blank=True, choices=[('None', 'Choose an option!'), ('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Uncertain', 'Uncertain'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], max_length=20, null=True)),
                ('recommend', models.CharField(blank=True, choices=[('None', 'Choose an option!'), ('Strongly Agree', 'Strongly Agree'), ('Agree', 'Agree'), ('Uncertain', 'Uncertain'), ('Disagree', 'Disagree'), ('Strongly Disagree', 'Strongly Disagree')], max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintenance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='printer_support.maintenance')),
                ('training', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='printer_support.training')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('printer_number', models.CharField(max_length=6)),
                ('box_number', models.CharField(blank=True, max_length=20, null=True)),
                ('pickup_parts', multiselectfield.db.fields.MultiSelectField(choices=[('n', 'None'), ('k', 'Key'), ('a', 'Adapter'), ('u', 'USB'), ('r', 'Sleeve Holder'), ('c', 'Cartridge')], max_length=11)),
                ('pickup_date', models.DateField(help_text='format : YYYY-MM-DDY')),
                ('assigned_technicians', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[], max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cancelled', models.BooleanField(default=False)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('date_cancelled', models.DateField(blank=True, null=True)),
                ('repair_status', models.CharField(choices=[('Pending', 'Pending'), ('Fixed', 'Fixed')], default='Pending', max_length=10)),
                ('delay_maintenance_reason', models.CharField(blank=True, choices=[('No parts available', 'No parts available'), ('Internal issues', 'Internal issues'), ('Car delay', 'Car delay')], max_length=20, null=True)),
                ('delay_maintenance_date', models.DateField(blank=True, null=True)),
                ('date_repaired', models.DateField(blank=True, help_text='format : YYYY-MM-DD', null=True)),
                ('fixed_by', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[], max_length=200, null=True)),
                ('requested_by', models.CharField(blank=True, max_length=60, null=True)),
                ('approved_by', models.CharField(blank=True, max_length=60, null=True)),
                ('action_status', models.CharField(default='Approved', max_length=20)),
                ('problem', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('c', 'CNP'), ('cs', 'CNP from start'), ('h', 'Broken Head'), ('b', 'Board'), ('pu', 'Printer Unlock'), ('rb', 'Ribbon Issues'), ('r', 'Roller Issues'), ('fm', 'Flipper Motor'), ('fb', 'Flipper Board'), ('s', 'Sensor Issues'), ('mp', 'Cartridge'), ('i', 'IHF'), ('o', 'OHF'), ('p', 'RJ11 Port'), ('l', 'LCD'), ('sa', 'Swing Arm'), ('e', 'Encoder')], max_length=40, null=True)),
                ('parts_replaced', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('h', 'Print Head'), ('b', 'Board'), ('s', 'Sensor'), ('i', 'IHF'), ('o', 'OHF'), ('m', 'Motor'), ('r', 'Roller'), ('eb', 'Encoder Board'), ('l', 'LCD')], max_length=18, null=True)),
                ('old_head_barcode', models.CharField(blank=True, max_length=9, null=True)),
                ('new_head_barcode', models.CharField(blank=True, max_length=9, null=True)),
                ('old_board', models.CharField(blank=True, max_length=16, null=True)),
                ('new_board', models.CharField(blank=True, max_length=16, null=True)),
                ('delivery_status', models.CharField(choices=[('Pending', 'Pending'), ('Delivered', 'Delivered')], default='Pending', max_length=10)),
                ('date_delivered', models.DateField(blank=True, help_text='format : YYYY-MM-DD', null=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='printer_support.client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_confirmed', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Procurement',
            fields=[
                ('printer_number', models.CharField(max_length=6, primary_key=True, serialize=False)),
                ('box_number', models.CharField(blank=True, max_length=20, null=True)),
                ('brand', models.CharField(blank=True, choices=[('Datacard', 'Datacard'), ('IDP', 'IDP'), ('Zebra', 'Zebra'), ('Fargo', 'Fargo'), ('Magicard', 'Magicard'), ('ScreenCheck', 'ScreenCheck'), ('Evolis', 'Evolis'), ('Nisca', 'Nisca')], max_length=30, null=True)),
                ('model', models.CharField(blank=True, choices=[('CD 800', 'CD 800'), ('IDP', 'IDP'), ('Smart 5', 'Smart 5')], max_length=30, null=True)),
                ('warranty_years', models.IntegerField(blank=True, null=True)),
                ('warranty_start_date', models.DateField(blank=True, null=True)),
                ('date_purchased', models.DateField(blank=True, null=True)),
                ('warranty_status', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='printer_support.client')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PrinterRMA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_name', models.CharField(max_length=30)),
                ('faulty_part_barcode', models.CharField(max_length=20)),
                ('replaced_part_barcode', models.CharField(blank=True, max_length=20, null=True)),
                ('rejection_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('printer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='printer_support.procurement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PartStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=60)),
                ('request', models.IntegerField(default=0)),
                ('topup', models.IntegerField(default=0)),
                ('action_status', models.CharField(default='Approved', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='printer_support.part')),
            ],
        ),
        migrations.CreateModel(
            name='PartEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=60)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MRWSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mrw_number', models.CharField(max_length=8)),
                ('pickup_parts', multiselectfield.db.fields.MultiSelectField(choices=[('l', 'Laptop'), ('la', 'Laptop Adapter'), ('s', 'IRIS Scanner'), ('sc', 'IRIS Scanner Cable'), ('ds', 'Document Scanner'), ('sd', 'SD Card'), ('rp', 'Receipt Printer'), ('rpc', 'Receipt Printer Cable'), ('rpa', 'Receipt Printer Adapter'), ('fs', 'Fingerprint Scanner'), ('sp', 'Signature PAD'), ('bs', 'Barcode Scanner'), ('cr', 'Card Reader'), ('w', 'Webcam'), ('uha', 'USB Hub-A'), ('uhc', 'USB Hub-C'), ('pb', 'Power Bank'), ('c', 'Power Bank to Laptop Cable'), ('pa', 'Power Bank Adapter'), ('led', 'LED'), ('b', 'Batteries'), ('bc', 'Battery Charger')], max_length=65)),
                ('pickup_date', models.DateField(help_text='format : YYYY-MM-DDY')),
                ('problem', models.TextField()),
                ('assigned_technicians', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[], max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cancelled', models.BooleanField(default=False)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('date_cancelled', models.DateField(blank=True, null=True)),
                ('repair_status', models.CharField(choices=[('Pending', 'Pending'), ('Fixed', 'Fixed')], default='Pending', max_length=10)),
                ('date_repaired', models.DateField(blank=True, help_text='format : YYYY-MM-DD', null=True)),
                ('re_qualified_mrw_number', models.CharField(blank=True, max_length=8, null=True)),
                ('fixed_by', models.IntegerField(blank=True, null=True)),
                ('requested_by', models.IntegerField(blank=True, null=True)),
                ('approved_by', models.IntegerField(blank=True, null=True)),
                ('action_status', models.CharField(default='Approved', max_length=20)),
                ('parts_replaced', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('l', 'Laptop'), ('la', 'Laptop Adapter'), ('s', 'IRIS Scanner'), ('sc', 'IRIS Scanner Cable'), ('ds', 'Document Scanner'), ('sd', 'SD Card'), ('rp', 'Receipt Printer'), ('rpc', 'Receipt Printer Cable'), ('rpa', 'Receipt Printer Adapter'), ('fs', 'Fingerprint Scanner'), ('sp', 'Signature PAD'), ('bs', 'Barcode Scanner'), ('cr', 'Card Reader'), ('w', 'Webcam'), ('uha', 'USB Hub-A'), ('uhc', 'USB Hub-C'), ('pb', 'Power Bank'), ('c', 'Power Bank to Laptop Cable'), ('pa', 'Power Bank Adapter'), ('led', 'LED'), ('b', 'Batteries'), ('bc', 'Battery Charger')], max_length=65, null=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='printer_support.client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MRW',
            fields=[
                ('mrw_number', models.CharField(max_length=8, primary_key=True, serialize=False)),
                ('date_purchased', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='printer_support.client')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LaminatorSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('laminator_number', models.CharField(max_length=7)),
                ('box_number', models.CharField(blank=True, max_length=20, null=True)),
                ('pickup_parts', multiselectfield.db.fields.MultiSelectField(choices=[('pa', 'Power Adapter'), ('ch1', 'L1 Cartridge Holder'), ('ch2', 'L1 Cartridge Holder')], max_length=10)),
                ('pickup_date', models.DateField(help_text='format : YYYY-MM-DDY')),
                ('problem', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('l1', 'Broken Cartridge - L1'), ('l2', 'Broken Cartridge - L2'), ('c', 'RJ11 Cable'), ('p', 'RJ11 Port'), ('d', 'Broken Debow')], max_length=11, null=True)),
                ('other_problem', models.TextField(blank=True, null=True)),
                ('assigned_technicians', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[], max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cancelled', models.BooleanField(default=False)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('date_cancelled', models.DateField(blank=True, null=True)),
                ('repair_status', models.CharField(choices=[('Pending', 'Pending'), ('Fixed', 'Fixed')], default='Pending', max_length=10)),
                ('date_repaired', models.DateField(blank=True, help_text='format : YYYY-MM-DD', null=True)),
                ('fixed_by', models.IntegerField(blank=True, null=True)),
                ('requested_by', models.IntegerField(blank=True, null=True)),
                ('approved_by', models.IntegerField(blank=True, null=True)),
                ('action_status', models.CharField(default='Approved', max_length=20)),
                ('parts_replaced', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('pa', 'Power Adapter'), ('ch1', 'L1 Cartridge Holder'), ('ch2', 'L1 Cartridge Holder')], max_length=10, null=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='printer_support.client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Laminator',
            fields=[
                ('laminator_number', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('box_number', models.CharField(blank=True, max_length=20, null=True)),
                ('date_purchased', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='printer_support.client')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ISSSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iss_number', models.CharField(max_length=9)),
                ('pickup_parts', multiselectfield.db.fields.MultiSelectField(choices=[('l', 'Laptop'), ('la', 'Laptop Adapter'), ('fs', 'Fingerprint Scanner'), ('bs', 'Barcode Scanner'), ('cr', 'Card Reader'), ('uh', 'USB Hub'), ('pb', 'Power Bank'), ('c', 'Power Bank to Laptop Cable'), ('pa', 'Power Bank Adapter')], max_length=24)),
                ('pickup_date', models.DateField(help_text='format : YYYY-MM-DDY')),
                ('problem', models.TextField()),
                ('assigned_technicians', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[], max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cancelled', models.BooleanField(default=False)),
                ('cancellation_reason', models.TextField(blank=True, null=True)),
                ('date_cancelled', models.DateField(blank=True, null=True)),
                ('repair_status', models.CharField(choices=[('Pending', 'Pending'), ('Fixed', 'Fixed')], default='Pending', max_length=10)),
                ('date_repaired', models.DateField(blank=True, help_text='format : YYYY-MM-DD', null=True)),
                ('re_qualified_iss_number', models.CharField(blank=True, max_length=9, null=True)),
                ('fixed_by', models.IntegerField(blank=True, null=True)),
                ('requested_by', models.IntegerField(blank=True, null=True)),
                ('approved_by', models.IntegerField(blank=True, null=True)),
                ('action_status', models.CharField(default='Approved', max_length=20)),
                ('parts_replaced', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('l', 'Laptop'), ('la', 'Laptop Adapter'), ('fs', 'Fingerprint Scanner'), ('bs', 'Barcode Scanner'), ('cr', 'Card Reader'), ('uh', 'USB Hub'), ('pb', 'Power Bank'), ('c', 'Power Bank to Laptop Cable'), ('pa', 'Power Bank Adapter')], max_length=24, null=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='printer_support.client')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ISS',
            fields=[
                ('iss_number', models.CharField(max_length=9, primary_key=True, serialize=False)),
                ('date_purchased', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='printer_support.client')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HelpDesk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issue', models.CharField(max_length=30)),
                ('description', models.TextField()),
                ('fix_status', models.CharField(choices=[('Pending', 'Pending'), ('Fixed', 'Fixed')], default='Pending', max_length=10)),
                ('fixed_by', models.IntegerField(blank=True, null=True)),
                ('date_fixed', models.DateField(null=True)),
                ('fix_confirmation', models.CharField(default='Pending', max_length=10)),
                ('ready_rate', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('position', models.TextField(null=True)),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
